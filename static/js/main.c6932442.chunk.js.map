{"version":3,"sources":["logo.svg","components/video/Tools.jsx","components/video/LinkModal.jsx","components/video/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","VIDEO_SPEEDS","Tools","props","playVideo","setPlayVideo","playList","videoRef","useState","playSpeed","setPlaySpeed","className","length","map","item","key","url","onClick","name","UnorderedListOutlined","style","fontSize","margin","RetweetOutlined","title","placement","overlayClassName","content","speed","current","playbackRate","parseFloat","onSpeedChange","size","disabled","width","URL_REG","LinkModal","setVisible","handleOk","restProps","isLoading","setIsLoading","videoUrl","setVideoUrl","modalFooter","type","footer","Search","placeholder","onSearch","test","message","error","Promise","resolve","reject","videoEl","document","createElement","setAttribute","oncanplay","onerror","src","preloadVideo","then","catch","finally","loading","marginTop","textAlign","Video","toolVisible","setToolVisible","setPlayList","isDraging","setIsDraging","linkVisible","setLinkVisible","useRef","fileChange","e","file","target","files","filePath","URL","createObjectURL","concat","onDropHandler","preventDefault","dataTransfer","handleLinkModalOk","split","slice","controls","crossOrigin","ref","draggable","htmlFor","onDragEnter","onDragLeave","onDragOver","onDrop","YoutubeOutlined","id","accept","onChange","trigger","visible","onVisibleChange","SettingOutlined","LinkOutlined","onCancel","Header","Layout","Content","App","height","require","alt","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.c6932442.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2f6ed3a3.svg\";","import React, { useState } from 'react';\nimport {\n    RetweetOutlined,\n    UnorderedListOutlined,\n} from '@ant-design/icons';\nimport { Popover, Button } from 'antd';\n\nconst VIDEO_SPEEDS = [2, 1.75, 1.5, 1.25, 1, 0.75];\n\nexport default function Tools(props) {\n    const { playVideo, setPlayVideo, playList, videoRef } = props;\n    const [playSpeed, setPlaySpeed] = useState(1);\n\n    function onSpeedChange(speed) {\n        if (!playVideo) return;\n\n        videoRef.current.playbackRate = parseFloat(speed);\n        setPlaySpeed(speed);\n    }\n\n    return (\n        <div className=\"o-video__ctrs-tools\">\n            <div className=\"tools-body\">\n                {\n                    playList.length ? (\n                        <ul className=\"tools-list\">\n                            {\n                                playList.map((item) => (\n                                    <li\n                                        className=\"item\"\n                                        key={item.url}\n                                        onClick={() => setPlayVideo(item.url)}\n                                    >{item.name}</li>\n                                ))\n                            }\n                        </ul>\n                    ) : (\n                        <div className=\"tools-list-empty\">\n                            <UnorderedListOutlined style={{ fontSize: 26, margin: 12 }} />\n                            <p>当前播放列表为空</p>\n                        </div>\n                    )\n                }\n            </div>\n            <div className=\"tools-footer\">\n                <RetweetOutlined className=\"icon-loop\" />\n                <Popover\n                    title=\"倍速播放\"\n                    placement=\"topRight\"\n                    overlayClassName=\"speeds-popup\"\n                    content={(\n                        <ul className=\"speeds-list\">\n                            {\n                                VIDEO_SPEEDS.map((speed) => (\n                                    <li\n                                        key={speed}\n                                        className=\"item\"\n                                        onClick={() => onSpeedChange(speed)}\n                                    >{speed}x</li>\n                                ))\n                            }\n                        </ul>\n                    )}\n                >\n                    <Button size=\"small\" disabled={!playVideo} style={{ width: 60 }}>{playSpeed}x</Button>\n                </Popover>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Modal, Input, Button, message } from 'antd';\n\nconst URL_REG = /^(http(s)?:\\/\\/|\\/\\/)\\w+/;\n\nexport default function LinkModal(props) {\n    const { setVisible, handleOk, ...restProps } = props;\n    const [isLoading, setIsLoading] = useState(false);\n    const [videoUrl, setVideoUrl] = useState('');\n\n    function preloadVideo(url) {\n        return new Promise((resolve, reject) => {\n            const videoEl = document.createElement('video');\n            videoEl.setAttribute('playsinline','true');\n            videoEl.setAttribute('muted','false');\n            videoEl.setAttribute('preload','auto');\n\n            setIsLoading(true);\n            videoEl.oncanplay = resolve;\n            videoEl.onerror = reject;\n            videoEl.src = url;\n        });\n    }\n\n    function onSearch(url) {\n        const isUrl = URL_REG.test(url);\n        if (!isUrl) return message.error('请输入合法的地址');\n\n        preloadVideo(url)\n            .then(() => setVideoUrl(url))\n            .catch(() => {\n                message.error('输入的视频地址不可用');\n                setVideoUrl('');\n            })\n            .finally(() => setIsLoading(false));\n    }\n\n    const modalFooter = (\n        <>\n            <Button onClick={() => setVisible(false)}>取 消</Button>\n            <Button\n                type=\"primary\"\n                disabled={!videoUrl}\n                onClick={() => handleOk(videoUrl)}\n            >打 开</Button>\n        </>\n    );\n\n    return (\n        <Modal\n            title=\"打开在线视频\"\n            footer={modalFooter}\n            { ...restProps }\n        >\n            <Input.Search placeholder=\"请输入视频地址\" onSearch={onSearch} loading={isLoading} />\n            <p style={{ marginTop: 20, textAlign: 'center' }}>输入在线视频的有效URL地址，或者YouTube页面、腾讯视频页面等</p>\n        </Modal>\n    )\n}","import React, { useState, useRef } from 'react';\nimport {\n    YoutubeOutlined,\n    SettingOutlined,\n    LinkOutlined,\n} from '@ant-design/icons';\nimport { Popover } from 'antd';\nimport Tools from './Tools';\nimport LinkModal from './LinkModal';\nimport './style.less';\n\nexport default function Video() {\n    const [playVideo, setPlayVideo] = useState(null);\n    const [toolVisible, setToolVisible] = useState(false);\n    const [playList, setPlayList] = useState([]);\n    const [isDraging, setIsDraging] = useState(false);\n    const [linkVisible, setLinkVisible] = useState(false);\n\n    const videoRef = useRef();\n\n    function fileChange(e) {\n        const file = e.target.files[0];\n        const filePath = URL.createObjectURL(file);\n        setPlayVideo(filePath);\n        setPlayList(playList.concat({\n            url: filePath,\n            name: file.name,\n        }));\n    }\n\n    function onDropHandler(e) {\n        e.preventDefault();\n\n        const file = e.dataTransfer.files[0];\n        const filePath = URL.createObjectURL(file);\n        setPlayVideo(filePath);\n        setPlayList(playList.concat({\n            url: filePath,\n            name: file.name,\n        }));\n    }\n\n    function handleLinkModalOk(url) {\n        setLinkVisible(false);\n        setPlayVideo(url);\n        const name = url.split('/').slice(-1)[0];\n        setPlayList(playList.concat({ url, name }));\n    }\n\n    function render() {\n        return (<div className=\"o-video\">\n            {\n                playVideo ? (\n                    <video\n                        controls\n                        crossOrigin=\"anonymous\"\n                        className=\"o-video__tag\"\n                        ref={videoRef}\n                        src={playVideo}\n                    ></video>\n                ) : (\n                    <label\n                        draggable\n                        htmlFor=\"file\"\n                        className='o-video__empty'\n                        onDragEnter={() => setIsDraging(true)}\n                        onDragLeave={() => setIsDraging(false)}\n                        onDragOver={e => e.preventDefault()}\n                        onDrop={onDropHandler}\n                    >\n                        <YoutubeOutlined style={{ fontSize: 80 }} />\n                        <span>{isDraging ? '松开文件' : '点击或拖拽视频文件'}</span>\n                        <input\n                            id=\"file\"\n                            type=\"file\"\n                            accept=\"video/*\"\n                            onChange={fileChange}\n                        />\n                    </label>\n                )\n            }\n            <Popover\n                placement=\"bottomRight\"\n                overlayClassName=\"tools-popup\"\n                title=\"播放列表\"\n                content={\n                    <Tools\n                        videoRef={videoRef}\n                        playList={playList}\n                        playVideo={playVideo}\n                        setPlayVideo={setPlayVideo}\n                    />\n                }\n                trigger=\"click\"\n                visible={toolVisible}\n                onVisibleChange={setToolVisible}\n            >\n                <SettingOutlined className=\"o-video__ctrs\"/>\n            </Popover>\n\n            <LinkOutlined\n                className=\"o-video__link\"\n                onClick={() => setLinkVisible(true)}\n            />\n            <LinkModal\n                visible={linkVisible}\n                setVisible={setLinkVisible}\n                handleOk={handleLinkModalOk}\n                onCancel={() => setLinkVisible(false)}\n            />\n        </div>)\n    }\n\n    return render();\n}\n","import React from 'react';\nimport Video from './components/video';\nimport { Layout } from 'antd';\n\nimport './App.less';\n\nconst { Header, Content } = Layout;\n\nfunction App() {\n  return (\n    <Layout style={{ height: '100vh' }}>\n      <Header>\n        <img className=\"App-logo\" src={require('./logo.svg')} alt=\"logo\"/>\n        <h1 className=\"App-title\">Online Video</h1>\n      </Header>\n      <Content>\n        <Video />\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}